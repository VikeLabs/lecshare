{"version":3,"sources":["components/LectureText.tsx","components/Footer.tsx","components/LectureContent.tsx","components/LectureAudioPlayer.tsx","components/TopBarDrawer.tsx","components/MainContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","transcriptionText","fontSize","fontFamily","margin","textAlign","maxWidth","transcriptionWord","display","lineHeight","padding","marginLeft","marginRight","marginTop","marginBottom","transcriptionWordHighlighted","backgroundColor","borderRadius","transition","LectureContent","props","classes","bodyText","words","map","entry","index","startTimeSeconds","endTimeSeconds","currentSeconds","currentNanos","startTimeNano","endTimeNano","key","starttimeseconds","starttimenano","endtimeseconds","endtimenano","className","word","footer","color","palette","text","secondary","spacing","paddingLeft","paddingRight","justifyContent","borderTop","borderColor","position","bottom","Footer","Typography","align","state","courseName","textLoad","wordArray","axios","get","then","response","startTimeNanosEntry","bodyArray","data","section","alternatives","startTime","nanos","wordStorage","seconds","endTime","push","setState","lectureBody","this","CircularProgress","React","Component","playbackButton","icon","label","valueLabel","formatTime","h","Math","floor","m","s","filter","a","join","LectureAudioPlayer","useState","value","marks","setMarks","Howl","src","source","preload","initializeHowler","howler","duration","setDuration","playing","setPlaying","setValue","isSliding","setIsSliding","loaded","setLoaded","requestRef","useRef","useEffect","cancelAnimationFrame","current","stop","unload","seekSeconds","time","seek","animate","onChange","decimal","round","seekNanos","setLabels","requestAnimationFrame","handleJump","event","offset","parseInt","currentTarget","targetValue","console","log","on","volume","Container","style","IconButton","name","onClick","disabled","pause","play","root","Slider","e","onChangeCommitted","markLabel","max","aria-labelledby","LinearProgress","drawer","breakpoints","up","width","flexShrink","appBar","menuButton","toolbar","mixins","drawerPaper","content","flexGrow","TopBarDrawer","container","useTheme","mobileOpen","setMobileOpen","currentValue","setCurrentValue","setCurrentNanos","handleDrawerToggle","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","CssBaseline","AppBar","Toolbar","aria-label","edge","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","MainContainer","changeCourse","changeLecture","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9597125.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { inheritLeadingComments } from '@babel/types';\nimport { lineHeight, textAlign } from '@material-ui/system';\nimport { workerData } from 'worker_threads';\n\n//TODO conditional font size like Medium\n\n\n\nconst useStyles = makeStyles(theme => ({\n    transcriptionText: {\n        fontSize: 21,\n        fontFamily: 'Roboto Serif, Noto Serif, Times New Roman, serif',\n        margin: 'auto',\n        textAlign: 'left',\n        maxWidth: '40em'\n    },\n    transcriptionWord: {\n        display: 'inline-block',\n        lineHeight: '17px',\n        // marginLeft: '5px',\n        // marginTop: '10px',\\\n\n        // Padding is highlighted, so it should be uniform on all sides.\n        padding: '5px',\n        marginLeft: '-5px',\n        marginRight: '-5px',\n        // Margins make up for extra space\n        marginTop: '5px',\n        marginBottom: '5px',\n    },\n    transcriptionWordHighlighted: {\n        display: 'inline-block',\n        lineHeight: '17px',\n        // marginLeft: '5px',\n        // marginTop: '10px',\n        \n        // Padding is highlighted, so it should be uniform on all sides.\n        padding: '5px',\n        marginLeft: '-5px',\n        marginRight: '-5px',\n        // Margins make up for extra space\n        marginTop: '5px',\n        marginBottom: '5px',\n\n        backgroundColor: '#ffbed0',\n        borderRadius: '10px',\n        transition: 'backgroundColor 100ms linear'\n    }\n}));\n\ntype WordStorageType = {\n    word: string,\n    startTimeSeconds: string,\n    endTimeSeconds: string,\n    endTimeNano: number,\n    startTimeNano: number\n}\n\ninterface LectureTextProps {\n    words: Array<WordStorageType>,\n    currentSeconds: number\n    currentNanos: number\n}\n\nexport default function LectureContent(props: LectureTextProps) {\n    \n    const classes = useStyles();\n\n    const bodyText = props.words.map((entry, index) => {\n            if (+entry.startTimeSeconds==+entry.endTimeSeconds && props.currentSeconds == +entry.startTimeSeconds && props.currentNanos >= +entry.startTimeNano && props.currentNanos <= +entry.endTimeNano) {\n                return(\n                    // @ts-ignore\n                    <span key={index} starttimeseconds={entry.startTimeSeconds} starttimenano={entry.startTimeNano} endtimeseconds={entry.endTimeSeconds} endtimenano={entry.endTimeNano}>\n                        <div className={classes.transcriptionWordHighlighted}>{entry.word}</div>\n                        &nbsp;\n                    </span>                 \n                )\n            } else if (+entry.startTimeSeconds + 1 == +entry.endTimeSeconds) {\n                if ((props.currentSeconds==+entry.startTimeSeconds && props.currentNanos >= +entry.startTimeNano) || (props.currentSeconds==+entry.endTimeSeconds && props.currentNanos <= +entry.endTimeNano)) {\n                    return(\n                        // @ts-ignore\n                        <span key={index} starttimeseconds={entry.startTimeSeconds} starttimenano={entry.startTimeNano} endtimeseconds={entry.endTimeSeconds} endtimenano={entry.endTimeNano}>\n                            <div className={classes.transcriptionWordHighlighted}>{entry.word}</div>\n                            &nbsp;\n                        </span>                 \n                    )\n                } else {\n                    return(\n                        // @ts-ignore\n                        <span className={classes.transcriptionWord} key={index} starttimeseconds={entry.startTimeSeconds} starttimenano={entry.startTimeNano} endtimeseconds={entry.endTimeSeconds} endtimenano={entry.endTimeNano}>\n                            {entry.word}&nbsp;\n                        </span>\n                    )\n                }\n            } else {  \n                return(\n                    // @ts-ignore\n                    <span className={classes.transcriptionWord} key={index} starttimeseconds={entry.startTimeSeconds} starttimenano={entry.startTimeNano} endtimeseconds={entry.endTimeSeconds} endtimenano={entry.endTimeNano}>\n                        {entry.word}&nbsp;\n                    </span>\n                )\n            }\n        }\n    )\n    \n    return(\n        <div className={classes.transcriptionText}><p>{bodyText}</p></div>\n    )\n}","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    footer: {\r\n        display: 'flex',\r\n        color: theme.palette.text.secondary,\r\n        padding: theme.spacing(3),\r\n        paddingLeft: '10%',\r\n        paddingRight: '10%',\r\n        justifyContent: 'center',\r\n        borderTop: 'solid',\r\n        borderColor: 'lightgrey',\r\n        position: \"relative\",\r\n        bottom: 0\r\n    }\r\n}));\r\n\r\nexport default function Footer() {\r\n    const classes = useStyles();\r\n    return(\r\n        <footer className={classes.footer}>\r\n            <Typography color='inherit' align='center'>\r\n                Lecshare brought to you by Vikelabs!<br/>\r\n                It is our goal to make learning more accessible to everyone by recording and transcribing lectures.<br/>\r\n                Developed by: Aomi Jokoji, Malcolm Seyd, Alex McRae, Bryce Edwards, Derek Lowlind, Goh Sato, Kevin Matthew, Malaki Vandas, and Ryley Woodland\r\n            </Typography>\r\n        </footer>     \r\n    )\r\n}","import React from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport LectureText from './LectureText'\nimport LectureSlides from './LectureSlides'\nimport Footer from './Footer'\nimport axios from 'axios'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { string } from 'prop-types';\n\ninterface LectureProps {\n    courseName: string,\n    currentSeconds: number\n    currentNanos: number\n}\n\ninterface LectureState {\n    courseName: string,\n    textLoad: boolean,\n    wordArray: Array<WordStorageType>\n}\n\ntype WordStorageType = {\n    word: string,\n    startTimeSeconds: string,\n    endTimeSeconds: string,\n    endTimeNano: number,\n    startTimeNano: number\n}\n\nclass LectureContent extends React.Component<LectureProps, LectureState> {\n\n    //for now this is a local file but eventually we will call to api to get this file. (then store in cache to quickly grab if revisiting the same component)\n    //alternatively we have this call in the backend to create the html which is then sent back (but for demo we do not have)\n    componentDidMount() {\n        axios.get('vikelabs_test1.json').then(response => {\n            let bodyArray: WordStorageType[] = []\n            var startTimeEntry;\n            var startTimeNanosEntry;\n            var endTimeEntry;\n            var endTimeNanosEntry; \n            for (var key in response.data) {\n                let section = response.data[key].alternatives[0]\n                for (var key in section.words) {\n                    if(!(\"nanos\" in section.words[key].startTime)) {\n                        startTimeNanosEntry = 0\n                    } else {\n                        startTimeNanosEntry =  section.words[key].startTime.nanos\n                    }\n                    let wordStorage: WordStorageType = {\n                        word: section.words[key].word,\n                        startTimeSeconds: section.words[key].startTime.seconds,\n                        endTimeSeconds: section.words[key].endTime.seconds,\n                        endTimeNano: section.words[key].endTime.nanos,\n                        startTimeNano: startTimeNanosEntry\n                    }       \n                    bodyArray.push(wordStorage)\n                }\n                    \n            }\n            this.setState({wordArray: bodyArray})\n            this.setState({textLoad: true})\n        })\n    }\n\n    constructor(props: LectureProps) {\n        super(props)\n        this.state = {\n            courseName: this.props.courseName,\n            textLoad: false,\n            wordArray: []\n        }\n    }\n\n    render() {\n\n        let lectureBody: any;\n\n        if (this.state.textLoad) {\n            lectureBody = <LectureText words={this.state.wordArray} currentSeconds={this.props.currentSeconds} currentNanos={this.props.currentNanos}/>\n        } else {\n            lectureBody = <CircularProgress />\n        }\n        return(\n            <div>\n                {/* <LectureSlides/> */}\n                {lectureBody}\n                <Footer/>\n            </div>     \n        )\n    }\n    \n}\n\nexport default LectureContent;","import React from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { Container, Button } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport Forward30Icon from '@material-ui/icons/Forward30';\nimport Replay10Icon from '@material-ui/icons/Replay10';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {Howl, Howler} from 'howler';\n\ninterface AudioPlayerProps {\n    value?: number\n    source: string\n    onChange?: (value: number, nanos: number) => void\n}\n\nconst useStyles = makeStyles({\n    playbackButton: {\n    },\n    icon: {\n        color: \"white\",\n    },\n    label: {\n        color: \"white\"\n    },\n    valueLabel: {\n        color: \"blue\"\n    }\n});\n\nfunction initializeHowler(props: AudioPlayerProps){\n    return new Howl({\n        src: props.source,\n        preload: true\n    })\n}\n\nexport function formatTime(seconds: number) {\n    const h = Math.floor(seconds / 3600);\n    const m = Math.floor((seconds % 3600) / 60);\n    const s = Math.floor(seconds % 60);\n    return [\n        h,\n        m > 9 ? m : (h ? '0' + m : m || '0'),\n        s > 9 ? s : '0' + s,\n    ].filter(a => a).join(':');\n}\n  \nexport default function LectureAudioPlayer(props: AudioPlayerProps) {\n    const classes = useStyles();\n    const [marks, setMarks] = React.useState([{value: 0, label: '',}])\n    const [howler, setHowler] = React.useState(initializeHowler(props));\n    const [duration, setDuration] = React.useState(100);\n    const [playing, setPlaying] = React.useState(false);\n    const [value, setValue] = React.useState(0);\n    const [isSliding, setIsSliding] = React.useState(false);\n    const [loaded, setLoaded] = React.useState(false);\n\n    const requestRef: any = React.useRef();\n  \n    React.useEffect(() => {\n        // runs on component mount\n        // requestRef.current = requestAnimationFrame(animate);\n        return () => {\n            // dismount\n            cancelAnimationFrame(requestRef.current);\n            // unload Howler\n            howler.stop();\n            howler.unload();\n        }\n    },[])\n\n    const seekSeconds = (time?: number) => {\n        return Math.floor(howler.seek() as number);\n    }\n\n    const seekNanos = (time?: number) => {\n        var initial = (howler.seek() as number) \n        var decimal = (initial % 1) * 10\n        var rounded = Math.round(decimal)\n        return rounded * 100000000\n    }\n\n    const animate = (time: any) => {\n        // The 'state' will always be the initial value here\n        if(howler.state() == \"loaded\"){\n            if(props.onChange){\n                props.onChange(seekSeconds(), seekNanos());\n            }\n            setValue(seekSeconds());\n            setLabels(seekSeconds());\n        }\n        requestRef.current = requestAnimationFrame(animate);\n    }\n\n    const setLabels = (time: number) => {\n        setMarks([\n            {\n                value: 0,\n                label: formatTime(time)\n            },\n            {\n                value: howler.duration(),\n                label: formatTime(duration)\n            }\n        ])\n    }\n\n    const handleValue = (e: any, value: any) => {\n        if(!isSliding){\n            setIsSliding(true);\n            cancelAnimationFrame(requestRef.current);\n        } \n        \n        setValue(value as number);\n        if(props.onChange){\n            props.onChange(value as number, 0);\n        }\n        setLabels(value);\n    }\n\n    const handleValueCommit = (e: any, value: any) => {\n        if(value as number){\n            howler.seek(value as number);\n            if(!playing){\n                howler.play();\n                setPlaying(true);\n                \n            }\n        }\n        setIsSliding(false);\n        requestRef.current = requestAnimationFrame(animate);\n        \n    }\n\n    const handlePlaying = () => {\n        const time = seekSeconds();\n        if(playing){\n            howler.pause();\n            cancelAnimationFrame(requestRef.current);\n            setPlaying(false);\n        } else {\n            howler.play();\n            requestRef.current = requestAnimationFrame(animate);\n            setPlaying(true);\n        }\n        \n        setLabels(time)\n    }\n\n    const handleJump = (event: React.MouseEvent<HTMLButtonElement>) => {\n        const offset = parseInt(event.currentTarget.value);\n        const targetValue = offset + value;\n        console.log(offset, value, targetValue)\n        if(targetValue > 0 && targetValue < duration){\n            setValue(targetValue);\n            if(!playing){\n                setLabels(targetValue);\n                if(props.onChange){\n                    props.onChange(targetValue, 0);\n                }\n            }\n            howler.seek(targetValue);\n        }\n    }\n\n    // Howler event when audio is loaded.\n    howler.on('load', () => {\n        setDuration(howler.duration() as number);\n        setLabels(0);\n        setLoaded(true);\n        howler.volume(0.5);\n    })\n\n    //  Howler event when audio has finished playback.\n    howler.on('end', () => {\n        setPlaying(false);\n        setValue(0);\n    })\n\n    return (\n        <Container>\n            { !loaded ? (\n                 <LinearProgress color=\"primary\" />\n            ) :\n            (<Container>\n                <Container style={{marginTop: \"7px\"}} >\n                <IconButton name={\"backward\"} value={-10} onClick={handleJump} disabled={value -10 < 0}>\n                    <Replay10Icon className={classes.icon}/>\n                </IconButton>\n                <IconButton onClick={handlePlaying} classes={{root: classes.playbackButton}}>\n                    {playing ? <PauseIcon className={classes.icon} /> : <PlayArrowIcon className={classes.icon} />}\n                </IconButton>\n                <IconButton name={\"forward\"} value={30} onClick={handleJump} disabled={value + 30 > duration}>\n                    <Forward30Icon className={classes.icon}/>\n                </IconButton>\n                </Container>\n                <Slider \n                value={value} \n                onChange={handleValue}\n                onChangeCommitted={handleValueCommit}\n                style={{color: 'white'}} \n                classes={{\n                    markLabel: classes.label,\n                    valueLabel: classes.valueLabel\n                }} \n                marks={marks}\n                max={duration}\n                key={props.source}\n                aria-labelledby=\"continuous-slider\"\n                />\n            </Container>)\n            }\n        </Container>\n    )\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport LectureContent from './LectureContent'\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport LectureAudioPlayer from './LectureAudioPlayer';\n\nconst drawerWidth = 200;\n\ninterface DrawerProps {\n  courseName: string,\n  container?: Element\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function TopBarDrawer(props: DrawerProps) {\n  const { container } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [currentValue, setCurrentValue] = React.useState(0);\n  const [currentNanos, setCurrentNanos] = React.useState(0);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const changeValue = (value: number, nanos: number) => {\n    setCurrentValue(value)\n    setCurrentNanos(nanos)\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        {['Lecture 1', 'Lecture 2'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{<MenuBookIcon/>}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n    </div>\n  );\n  \n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Lecshare \n          </Typography>\n         <LectureAudioPlayer source={'vikelabs_test1.ogg'} onChange={changeValue}/>\n        </Toolbar>\n        \n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n            <LectureContent courseName={props.courseName} currentSeconds={currentValue} currentNanos={currentNanos}/>\n      </main>\n    </div>\n  ); \n}\n","import React from 'react'\nimport TopBarDrawer from \"./TopBarDrawer\";\nimport Footer from \"./Footer\"\n\ninterface MainState {\n    courseName:string\n}\n\nclass MainContainer extends React.Component<{}, MainState> {\n    \n    constructor(props: any) {\n        super(props);\n        this.state = {\n            courseName: 'SENG310'\n        }\n    }\n\n    ///method for handling course change (get new data, audio, text, lectures etc.)\n    changeCourse = () => {\n        \n    }\n    ///method for handling change in lecture, changing data but not available lectures or course\n    changeLecture = () => {\n    \n    }\n    \n    render() {\n        return(\n            <div className='main'>\n                <TopBarDrawer courseName={this.state.courseName}/>\n            </div>\n        )\n    }\n}\n\nexport default MainContainer;","import React from 'react';\nimport './App.css';\nimport MainContainer from './components/MainContainer'\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <MainContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}